import React, { useState, useEffect } from 'react';

const App = () => {
  const [data, setData] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [results, setResults] = useState([]);
  const [currentIndex, setCurrentIndex] = useState(0);

  useEffect(() => {
    fetch('/gosho_wnd1_display_data.json')
      .then((res) => res.json())
      .then((json) => setData(json));
  }, []);

  useEffect(() => {
    if (searchTerm.trim() !== '') {
      const keyword = searchTerm.toLowerCase();
      const filtered = data.filter((item) => {
        const textEn = item.text_en || '';
        const textTh = item.text_th || '';
        return (
          textEn.toLowerCase().includes(keyword) ||
          textTh.toLowerCase().includes(keyword)
        );
      });
      setResults(filtered);
      setCurrentIndex(0);
    } else {
      setResults([]);
    }
  }, [searchTerm, data]);

  const handleNext = () => {
    if (currentIndex < results.length - 1) {
      setCurrentIndex(currentIndex + 1);
    }
  };

  const handleBack = () => {
    if (currentIndex > 0) {
      setCurrentIndex(currentIndex - 1);
    }
  };

  const highlightText = (text) => {
    if (!searchTerm || typeof text !== 'string') return text;
    const parts = text.split(new RegExp(`(${searchTerm})`, 'gi'));
    return parts.map((part, index) =>
      part.toLowerCase() === searchTerm.toLowerCase() ? (
        <mark key={index}>{part}</mark>
      ) : (
        part
      )
    );
  };

  const contentToShow =
    searchTerm.trim() === ''
      ? data
      : results.length > 0
      ? [results[currentIndex]]
      : [];

  return (
    <>
      {/* Sticky Header Area */}
      <div className="sticky top-0 z-50 bg-white border-b shadow-sm p-4">
        <h1 className="text-2xl font-bold mb-1">Gosho Search Tool</h1>
        <input
          type="text"
          placeholder="Search..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          className="border p-2 w-64 mb-2"
        />

        {searchTerm && (
          <div className="text-sm text-gray-700 mb-1">
            {results.length > 0
              ? `พบทั้งหมด ${results.length} ตำแหน่ง`
              : `ไม่พบคำที่ตรงกับ "${searchTerm}"`}
          </div>
        )}

        {results.length > 0 && (
          <div className="flex items-center space-x-2 text-sm text-gray-700">
            <button
              onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}
              className="px-4 py-1 border bg-gray-100"
            >
              Home
            </button>
            <button
              onClick={handleBack}
              disabled={currentIndex === 0}
              className="px-4 py-1 border bg-gray-100"
            >
              Back
            </button>
            <button
              onClick={handleNext}
              disabled={currentIndex === results.length - 1}
              className="px-4 py-1 border bg-gray-100"
            >
              Next
            </button>
            <span className="px-2 py-1 text-gray-600">
              ({currentIndex + 1} / {results.length})
            </span>
          </div>
        )}
      </div>

      {/* Main Content */}
      <div className="p-4">
        {contentToShow.map((item, index) => (
          <div key={index} className="whitespace-pre-wrap mt-6 mb-6">
            <div className="font-semibold">
              {item.book_eng_thai} | {item.gosho_id} {item.gosho_name_eng_thai}
            </div>
            <div className="text-sm text-gray-600">
              Page: {item.page_number_English} | หน้าไทย: {item.page_thai}
            </div>
            <div className="mt-2">{highlightText(item.text_en)}</div>
            <div className="mt-2">{highlightText(item.text_th)}</div>

            {index !== contentToShow.length - 1 && (
              <hr className="mt-6 border-t border-gray-300" />
            )}
          </div>
        ))}

        {contentToShow.length === 0 && searchTerm.trim() !== '' && (
          <div className="mt-8 text-red-600 font-semibold">
            ไม่พบข้อความที่ตรงกับคำค้นหา
          </div>
        )}
      </div>
    </>
  );
};

export default App;
